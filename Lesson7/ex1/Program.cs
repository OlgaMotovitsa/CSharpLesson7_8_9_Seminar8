// Собираем строку с числами от a до b, a≤b


// Итак, первая задача. Для начала обратимся к нашему списку задач и попробуем собрать
// строку с числами от a до b. В условии оговорено, что число а будет меньше или равно b. В
// случае итеративного подхода всё предельно просто.
// Запускаем цикл, который будет менять счётчик от значения а, меньшим или равным б. В
// результирующую строку будем собирать конкретное значение счётчика. В то же время,
// используя рекурсию, надо прописать условие окончания — в нашем случае оно указано в
// ветке else, когда возвращаем пустую строку, если условие не выполнилось. Соответственно,
// если а меньше или равно b, собираем строку с текущим значением а и вызываем новую копию
// метода со значениями аргументов. Первый увеличится на 1.
// Дальше в качестве самостоятельной работы предлагаю додумать этот метод так, чтобы
// получилось на один вызов рекурсии меньше. Даю небольшую подсказку: надо немного
// подкрутить условия и ветку else прописать несколько иначе.
// Как видите, ничего сложного здесь нет. В то же время, если нас попросят вывести число от
// большего к меньшему, то итеративно подход принципиально отличаться не будет — придётся
// немного поправить условия. Соответственно, потребуется делать вывод от большего к
// меньшему и производить не инкремент счётчика, а декремент. В то же время, используя
// рекурсию, нам достаточно поменять саму собирающую строку. То есть мы будем прибавлять
// не слева, как это было в предыдущем примере, а справа

string NumbersFor(int a, int b)
{
    string result = String.Empty;
    for (int i = a; i <=b; i++)
    {
       result += $"{i} "; 
    }
    return result;
}

string NumbersRec(int a, int b)
{
    if (a<= b) return $"{a} " + NumbersRec( a+ 1, b);
    else return String.Empty;
}

System.Console.WriteLine((NumbersFor(1, 10)));
System.Console.WriteLine((NumbersFor(1, 10)));